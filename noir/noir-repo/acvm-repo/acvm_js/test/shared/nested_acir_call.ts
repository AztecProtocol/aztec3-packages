import { WitnessMap, StackItem, WitnessStack } from '@noir-lang/acvm_js';

// See `nested_acir_call_circuit` integration test in `acir/tests/test_program_serialization.rs`.
export const bytecode = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 0, 255, 181, 145, 61, 10, 131, 64, 16, 133, 231, 7, 60, 71, 202, 164, 75, 200, 17, 66, 32,
  85, 72, 153, 198, 206, 3, 136, 157, 165, 71, 16, 47, 224, 41, 68, 143, 99, 103, 105, 99, 175, 226, 174, 174, 195, 194,
  174, 133, 31, 60, 24, 134, 199, 236, 188, 29, 134, 5, 86, 154, 9, 38, 225, 36, 130, 13, 84, 2, 221, 119, 153, 24, 4,
  218, 120, 1, 47, 144, 12, 239, 61, 250, 38, 237, 163, 188, 213, 191, 119, 149, 101, 255, 240, 250, 236, 62, 105, 19,
  231, 175, 118, 40, 122, 245, 152, 231, 220, 117, 81, 89, 163, 197, 199, 176, 15, 168, 57, 154, 197, 244, 186, 178,
  144, 255, 92, 10, 148, 159, 140, 189, 172, 71, 144, 87, 146, 53, 139, 158, 237, 51, 206, 12, 141, 112, 236, 128, 174,
  60, 54, 70, 126, 172, 28, 127, 235, 2, 0, 0,
]);

export const initialWitnessMap: WitnessMap = new Map([
  [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
  [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
]);

const inner_call_witness: StackItem = {
  index: 2,
  witness: new Map([
    [0, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const nested_call_witness: StackItem = {
  index: 1,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const main_witness: StackItem = {
  index: 0,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

export const expectedWitnessStack: WitnessStack = [
  inner_call_witness,
  nested_call_witness,
  inner_call_witness,
  nested_call_witness,
  main_witness,
];

export const expectedCompressedWitnessStack = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 2, 255, 237, 145, 177, 13, 0, 32, 8, 4, 17, 117, 31, 75, 75, 87, 113, 255, 37, 44, 196, 5,
  228, 42, 194, 39, 132, 238, 114, 249, 239, 114, 163, 118, 47, 203, 254, 240, 101, 23, 152, 213, 120, 199, 73, 58, 42,
  200, 170, 176, 87, 238, 27, 119, 95, 201, 238, 190, 89, 7, 37, 195, 196, 176, 4, 5, 0, 0,
]);
